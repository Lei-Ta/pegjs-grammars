"Home":../../

h1. ReML

"Grammar file":https://github.com/Re-Ling/pegjs-grammars/blob/master/grammars/ReML.pegjs of ReML for PEG parser generator

ReML can be used as replacement to XML and HTML, because it allows objects with same name and preserves order, and its syntax is simpler then JSON's or reJSON's one.

There is code in ReML and parser's output in JSON: 

Input (ReML):

<pre><code>(
  doctype('html')
  html (
    head (
      title 'This is title'
      meta (
        charset = ('utf-8')
      )
    ) 
    body (
      h1#new :class1 (
        id    = "newest"
        class = ( "other"; "another" )
        'This is \\sdfsdf
header' )
      p 'This is 
text'
      ul (;\+abc+\ br ;\\abc
        li ("a") * (
          ( 'One';'Two' )            
          15,15
          15 
          ( 
            "n"; "m" 
            n = 'Four' 
          ) 
        )
      )
    )
  )
)</code></pre>

Ouput (JSON):

bc. { "_$_" : [
  { "_TYPE_": "_MESSAGE_", "_NAME_": "doctype", "_VALUE_": "html" },
  { "_TYPE_": "_MESSAGE_", "_NAME_": "html",    "_VALUE_": [
    { "_TYPE_": "_MESSAGE_", "_NAME_": "head", "_VALUE_": [
      { "_TYPE_": "_MESSAGE_", "_NAME_": "title", "_VALUE_": "This is title" },
      { "_TYPE_": "_MESSAGE_", "_NAME_": "meta",  "_VALUE_": [
        { "_TYPE_": "_FIELD_", "_NAME_": "charset", "_ACTION_": "_SET_", "_VALUE_": "utf-8" }
      ] }
    ] },
    { "_TYPE_": "_MESSAGE_", "_NAME_": "body", "_VALUE_": [
      { "_TYPE_": "_MESSAGE_", "_NAME_": "h1", "_VALUE_": [
        { "_TYPE_": "_FIELD_", "_NAME_": "id",    "_ACTION_": "_SET_", "_VALUE_": "new"    },
        { "_TYPE_": "_FIELD_", "_NAME_": "class", "_ACTION_": "_SET_", "_VALUE_": "class1" },
        { "_TYPE_": "_FIELD_", "_NAME_": "id",    "_ACTION_": "_SET_", "_VALUE_": "newest" },
        { "_TYPE_": "_FIELD_", "_NAME_": "class", "_ACTION_": "_SET_", "_VALUE_": [
          "other", "another"
        ] },
        "This is header"
      ] },
      { "_TYPE_": "_MESSAGE_", "_NAME_": "p", "_VALUE_": [ "This is ",
                                                             "text" ] },
      { "_TYPE_": "_MESSAGE_", "_NAME_": "ul", "_VALUE_": [
        { "_TYPE_": "_MLC_", "_VALUE_": "abc" },
        { "_TYPE_": "_MESSAGE_",     "_NAME_": "br" },
        { "_TYPE_": "_SLC_", "_VALUE_": "abc" },
        { "_TYPE_": "_MESSAGE_",     "_NAME_": "li", "_VALUE_": "a", "_LOOP_": [
          { "_TYPE_": "_ITERATION_", "_VALUE_": [ "One", "Two" ] },
          { "_TYPE_": "_ITERATION_", "_VALUE_": 15.15 },
          { "_TYPE_": "_ITERATION_", "_VALUE_": 15 },
          { "_TYPE_": "_ITERATION_", "_VALUE_": [
            "n", "m",
            { "_TYPE_": "_FIELD_", "_NAME_": "n", "_ACTION_": "_SET_", "_VALUE_": "Four" } 
          ] }
        ] }
      ] }
    ] }
  ] }
]
